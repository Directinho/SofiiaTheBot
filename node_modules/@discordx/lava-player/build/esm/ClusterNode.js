import { BaseNode } from "./base/Node.js";
export default class ClusterNode extends BaseNode {
    cluster;
    tags;
    stats;
    constructor(cluster, options) {
        super(options);
        this.cluster = cluster;
        this.tags = new Set(options.tags || []);
        this.on("stats", (stats) => (this.stats = stats));
    }
    emit(name, ...args) {
        if (this.listenerCount(name)) {
            super.emit(name, ...args);
        }
        return this.cluster.emit(name, ...args);
    }
    send = (guildId, pk) => this.cluster.send(guildId, pk);
    async destroy(code, data) {
        await super.destroy(code, data);
        this.cluster.nodes.splice(this.cluster.nodes.indexOf(this), 1);
    }
}
//# sourceMappingURL=ClusterNode.js.map